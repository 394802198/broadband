<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DEFINITION AREA --><!-- // DEFINITION AREA -->
<!-- =================================================================================== -->
<!-- SELECT AREA --><!-- // END SELECT AREA -->
<!-- =================================================================================== -->
<!-- INSERT AREA --><!-- // END INSERT AREA -->
<!-- =================================================================================== -->
<!-- UPDATE AREA --><!-- // END UPDATE AREA -->
<!-- =================================================================================== -->
<!-- DELETE AREA --><!-- // END DELETE AREA -->

<mapper namespace="com.tm.broadband.mapper.PlanMapper">

	<!-- DEFINITION AREA -->
	
	<sql id="planColumns">
		p.`id`							as p_id, 
		p.`plan_name`					as p_plan_name, 		
		p.`plan_desc`					as p_plan_desc,
		p.`plan_price`					as p_plan_price,
		p.`original_price`				as p_original_price,
		p.`data_flow`					as p_data_flow,
		p.`data_flow_k`					as p_data_flow_k,
		p.`plan_status`					as p_plan_status,
		p.`plan_type`					as p_plan_type,
		p.`plan_sort`					as p_plan_sort,
		p.`plan_group`					as p_plan_group, 
		p.`plan_class`					as p_plan_class,
		p.`plan_new_connection_fee`		as p_plan_new_connection_fee,
		p.`memo`						as p_memo,
		p.`plan_prepay_months`			as p_plan_prepay_months,
		p.`pstn_count`					as p_pstn_count,
		p.`pstn_rental_amount`			as p_pstn_rental_amount,
		p.`term_period`					as p_term_period,
		p.`img1`						as p_img1, 
		p.`img2`						as p_img2,
		p.`img3` 						as p_img3
	</sql>
	<resultMap type="Plan" id="planResultMap">
		<id property="id" column="p_id" />
		<result property="plan_name" column="p_plan_name" />
		<result property="plan_desc" column="p_plan_desc" />
		<result property="plan_price" column="p_plan_price" />
		<result property="original_price" column="p_original_price" />
		<result property="data_flow" column="p_data_flow" />
		<result property="data_flow_k" column="p_data_flow_k" />
		<result property="plan_status" column="p_plan_status" />
		<result property="plan_type" column="p_plan_type" />
		<result property="plan_sort" column="p_plan_sort" />
		<result property="plan_group" column="p_plan_group" />
		<result property="plan_class" column="p_plan_class" />
		<result property="plan_new_connection_fee" column="p_plan_new_connection_fee" />
		<result property="memo" column="p_memo" />
		<result property="plan_prepay_months" column="p_plan_prepay_months" />
		<result property="pstn_count" column="p_pstn_count" />
		<result property="pstn_rental_amount" column="p_pstn_rental_amount" />
		<result property="term_period" column="p_term_period" />
		<result property="img1" column="p_img1" />
		<result property="img2" column="p_img2" />
		<result property="img3" column="p_img3" />
	</resultMap>
	
	<sql id="planWhere">
		<where>
			<if test="params.plan_group != null">and plan_group = #{params.plan_group}</if>
			<if test="params.plan_class != null">and plan_class = #{params.plan_class}</if>
			<if test="params.plan_type != null">and plan_type = #{params.plan_type}</if>
			<if test="params.plan_sort != null">and plan_sort = #{params.plan_sort}</if>
			<if test="params.plan_status != null">and plan_status = #{params.plan_status}</if>
		</where>
	</sql>
	
	<!-- // DEFINITION AREA -->
	
	<!-- =================================================================================== -->
	
	<!-- SELECT AREA -->
	 
	<select id="selectPlan" parameterType="Plan" resultType="Plan">
		select * from tm_plan as p
		<include refid="planWhere"/>
		<if test="params.orderby != null">${params.orderby}</if>
	</select>
	
	<select id="selectPlans" parameterType="Plan" resultType="Plan">
		select * from tm_plan as p
		<include refid="planWhere"/>
		<if test="params.orderby != null">${params.orderby}</if>
	</select>
	
	<!-- select plan page -->
	<select id="selectPlansByPage" parameterType="Page" resultType="Plan">
		select * from tm_plan 
		<include refid="planWhere"/>
		<if test="params.orderby != null">${params.orderby}</if>
		limit #{pageOffset}, #{pageSize}
	</select>
	
	<!-- select plan sum -->
	<select id="selectPlansSum" parameterType="Page" resultType="int">
		select count(*) from tm_plan 
	</select>
	
	<!-- when create plan, check same name -->
	<select id="selectExistPlanByName" resultType="int">
		select count(*) from tm_plan where plan_name = #{0} 
	</select>
	
	<!-- when update plan, check same name -->
	<select id="selectExistNotSelfPlanByName" resultType="int">
		select count(*) from tm_plan where plan_name = #{0} and id != #{1}
	</select>
	
	<!-- select one plan by id -->
	<select id="selectPlanById" resultType="Plan">
		SELECT * FROM `tm_plan` WHERE  id = #{0}
	</select>
	
	<!-- select distinct plan_group -->
	<select id="selectDistinctPlanGroup" resultType="String">
		SELECT DISTINCT plan_group FROM `tm_plan`
	</select>
	
	<!-- select plan with topup -->
	<select id="selectPlansWithTopups" parameterType="Plan" resultMap="selectPlansWithTopupsResultMap">
		select 
			plan.id as p_id, plan.plan_name as p_name, plan.plan_desc as p_desc, plan.plan_price as p_price, 
			plan.data_flow as p_data_flow, plan.data_flow_k as p_data_flow_k,
			plan.plan_status as p_status, plan.plan_type as p_type, plan.plan_sort as p_sort, 
			plan.memo as p_memo, plan.plan_group as p_group, plan.plan_new_connection_fee as p_new_connection_fee,
			plan.plan_topupid_array as p_topupid_array,
			
			topup.id as top_id, topup.topup_name as top_name, topup.topup_fee as top_fee, 
			topup.topup_data_flow as top_data_flow, topup.topup_status as top_status
		from tm_plan as plan 
		left join tm_plan_topup as plantopup on plantopup.plan_id = plan.id
		left join tm_topup as topup on topup.id = plantopup.topup_id
		where 1=1
		<if test="plan_group != null">
			and plan.plan_group = #{plan_group}
		</if>
		<if test="plan_sort != null">
			and plan.plan_sort = #{plan_sort}
		</if>
		<if test="plan_status != null">
			and plan.plan_status = #{plan_status}
		</if>
		<if test="params.orderby != null">
			${params.orderby}
		</if>
	</select>
	
	<resultMap type="Plan" id="selectPlansWithTopupsResultMap">
		<id property="id" column="p_id" />
  		<result property="plan_name" column="p_name"/>
  		<result property="plan_desc" column="p_desc"/>
  		<result property="plan_price" column="p_price"/>
  		<result property="data_flow" column="p_data_flow"/>
  		<result property="data_flow_k" column="p_data_flow_k"/>
  		<result property="plan_status" column="p_status"/>
  		<result property="plan_type" column="p_type"/>
  		<result property="plan_sort" column="p_sort"/>
  		<result property="memo" column="p_memo"/>
  		<result property="plan_group" column="p_group"/>
  		<result property="plan_new_connection_fee" column="p_new_connection_fee"/>
  		<result property="plan_topupid_array" column="p_topupid_array"/>
  		
  		<collection property="topups" ofType="Topup">
  			<id property="id" column="top_id" />
	  		<result property="topup_name" column="top_name"/>
	  		<result property="topup_fee" column="top_fee"/>
	  		<result property="topup_data_flow" column="top_data_flow"/>
	  		<result property="topup_status" column="top_status"/>
  		</collection>
	</resultMap>
	
	<!-- // END SELECT AREA -->
	
	<!-- =================================================================================== -->
	
	<!-- INSERT AREA -->
	
	<!-- create plan -->
	<insert id="insertPlan" parameterType="Plan" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `tm_plan`(
			`plan_name`, `plan_desc`, `plan_price`, `original_price`, `data_flow`, `data_flow_k`,
			`plan_status`, `plan_type`, `plan_sort`, `plan_group`, `plan_class`, 
			`plan_new_connection_fee`, `memo`, `plan_prepay_months`, `pstn_count`, `pstn_rental_amount`, 
			`term_period`, `img1`, `img2`, `img3`) 
		VALUES (
			#{plan_name}, #{plan_desc}, #{plan_price}, #{original_price}, #{data_flow}, #{data_flow_k},
			#{plan_status}, #{plan_type}, #{plan_sort}, #{plan_group}, #{plan_class}, 
			#{plan_new_connection_fee}, #{memo}, #{plan_prepay_months}, #{pstn_count}, #{pstn_rental_amount}, 
			#{term_period}, #{img1}, #{img2}, #{img3})
	</insert>
	
	<insert id="insertPlanTopup">
		insert into `tm_plan_topup`(`plan_id`, `topup_id`) VALUES(#{0}, #{1})
	</insert>
	
	<!-- // END INSERT AREA -->
	
	<!-- =================================================================================== -->
	
	<!-- UPDATE AREA -->
	
	<!-- update plan -->
	<update id="updatePlan" parameterType="Plan">
		UPDATE `tm_plan` 
		<set>
			<if test="plan_name != null">`plan_name`=#{plan_name},</if>
			<if test="plan_desc != null">`plan_desc`=#{plan_desc},</if>
			<if test="plan_price != null">`plan_price`=#{plan_price},</if>
			<if test="original_price != null">`original_price`=#{original_price},</if>
			<if test="data_flow != null">`data_flow`=#{data_flow},</if>
			<if test="data_flow_k != null">`data_flow_k`=#{data_flow_k},</if>
			<if test="plan_status != null">`plan_status`=#{plan_status},</if>
			<if test="plan_type != null">`plan_type`=#{plan_type},</if>
			<if test="plan_sort != null">`plan_sort`=#{plan_sort},</if>
			<if test="plan_group != null">`plan_group`=#{plan_group},</if>
			<if test="plan_class != null">`plan_class`=#{plan_class},</if>
			<if test="plan_new_connection_fee != null">`plan_new_connection_fee`=#{plan_new_connection_fee},</if>
			<if test="memo != null">`memo`=#{memo},</if>
			<if test="plan_prepay_months != null">`plan_prepay_months`=#{plan_prepay_months},</if>
			<if test="pstn_count != null">`pstn_count`=#{pstn_count},</if>
			<if test="pstn_rental_amount != null">`pstn_rental_amount`=#{pstn_rental_amount},</if>
			<if test="term_period != null">`term_period`=#{term_period},</if>
			<if test="img1 != null">`img1`=#{img1},</if>
			<if test="img2 != null">`img2`=#{img2},</if>
			<if test="img3 != null">`img3`=#{img3}</if>
		</set>
		<where>
			<if test="params.id != null">`id`=#{params.id}</if>
		</where>
	</update>
	
	<update id="updatePlanPicById" parameterType="Plan">
		UPDATE `tm_plan`
		<set>
			<if test="img1 != null">`img1`=#{img1},</if>
			<if test="img2 != null">`img2`=#{img2},</if>
			<if test="img3 != null">`img3`=#{img3}</if>
		</set>
		<where>
			<if test="params.id != null">`id`=#{params.id}</if>
		</where>
	</update>
	
	<!-- // END UPDATE AREA -->
	
	<!-- =================================================================================== -->
	
	<!-- DELETE AREA -->
	
	<delete id="deletePlanById">
		DELETE FROM tm_plan WHERE id=#{0}
	</delete>
	
	<!-- // END DELETE AREA -->
	
</mapper>